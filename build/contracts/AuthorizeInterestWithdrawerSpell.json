{
  "contractName": "AuthorizeInterestWithdrawerSpell",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ideaToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ideaToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexander Schlindwein\",\"details\":\"Spell to authorize an interest withdrawer\",\"methods\":{\"execute(address,address,address)\":{\"details\":\"Authorizes an address to withdraw interest for an IdeaToken\",\"params\":{\"exchange\":\"The address of the IdeaTokenExchange\",\"ideaToken\":\"The address of the IdeaToken for which to authorize an interest withdrawer\",\"withdrawer\":\"The address of the withdrawer\"}}},\"title\":\"AuthorizeInterestWithdrawerSpell\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/alexa/Desktop/ideamarket-contracts/contracts/spells/AuthorizeInterestWithdrawerSpell.sol\":\"AuthorizeInterestWithdrawerSpell\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/alexa/Desktop/ideamarket-contracts/contracts/core/IIdeaTokenExchange.sol\":{\"keccak256\":\"0x323b0ca5d09a028aaed17bcb7ee97b41fd33b72cf12d57287eb2589ca26fac35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14f51c88c0b6ea828fa63be1fa0e1dcc0d60390e24709edb68df47bc31aa2d83\",\"dweb:/ipfs/QmVv114Wo1vBrX268CGzt6jSA447dZxKAYPo17T84Djdps\"]},\"/C/Users/alexa/Desktop/ideamarket-contracts/contracts/spells/AuthorizeInterestWithdrawerSpell.sol\":{\"keccak256\":\"0x4260f30052e3b41d5476e1e80c81e64cca3f5dfd77d479bb9d005eb53fa51efa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d91a45f53e5f63dd44c5c058a1bcaf5f1c8af0295b061d1e9d4f4db50ed534ed\",\"dweb:/ipfs/QmYUapx2xQBvA1Y3jC3L1o8HUHDyF4DVmvFueZLXJqxyRA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e65add9514610030575b600080fd5b6100b26004803603606081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100b4565b005b8273ffffffffffffffffffffffffffffffffffffffff1663159fc8f883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b5050505050505056fea26469706673582212208392c25cc2d9dc7ec6303a6b20dc5398d962e6602a6044b979d123760cd2c08864736f6c63430006090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e65add9514610030575b600080fd5b6100b26004803603606081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100b4565b005b8273ffffffffffffffffffffffffffffffffffffffff1663159fc8f883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b5050505050505056fea26469706673582212208392c25cc2d9dc7ec6303a6b20dc5398d962e6602a6044b979d123760cd2c08864736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "247:551:18:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "247:551:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;727:8;708:56;;;765:9;776:10;708:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:181;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.9;\r\n\r\nimport \"../core/IIdeaTokenExchange.sol\";\r\n\r\n/**\r\n * @title AuthorizeInterestWithdrawerSpell\r\n * @author Alexander Schlindwein\r\n *\r\n * @dev Spell to authorize an interest withdrawer\r\n */\r\ncontract AuthorizeInterestWithdrawerSpell {\r\n\r\n    /**\r\n     * @dev Authorizes an address to withdraw interest for an IdeaToken\r\n     *\r\n     * @param exchange The address of the IdeaTokenExchange\r\n     * @param ideaToken The address of the IdeaToken for which to authorize an interest withdrawer\r\n     * @param withdrawer The address of the withdrawer\r\n     */\r\n    function execute(address exchange, address ideaToken, address withdrawer) external {\r\n        IIdeaTokenExchange(exchange).authorizeInterestWithdrawer(ideaToken, withdrawer);\r\n    }\r\n}",
  "sourcePath": "C:/Users/alexa/Desktop/ideamarket-contracts/contracts/spells/AuthorizeInterestWithdrawerSpell.sol",
  "ast": {
    "absolutePath": "/C/Users/alexa/Desktop/ideamarket-contracts/contracts/spells/AuthorizeInterestWithdrawerSpell.sol",
    "exportedSymbols": {
      "AuthorizeInterestWithdrawerSpell": [
        4059
      ]
    },
    "id": 4060,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4037,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "/C/Users/alexa/Desktop/ideamarket-contracts/contracts/core/IIdeaTokenExchange.sol",
        "file": "../core/IIdeaTokenExchange.sol",
        "id": 4038,
        "nodeType": "ImportDirective",
        "scope": 4060,
        "sourceUnit": 712,
        "src": "60:40:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4039,
          "nodeType": "StructuredDocumentation",
          "src": "104:141:18",
          "text": " @title AuthorizeInterestWithdrawerSpell\n @author Alexander Schlindwein\n @dev Spell to authorize an interest withdrawer"
        },
        "fullyImplemented": true,
        "id": 4059,
        "linearizedBaseContracts": [
          4059
        ],
        "name": "AuthorizeInterestWithdrawerSpell",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4057,
              "nodeType": "Block",
              "src": "697:98:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "ideaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "765:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4054,
                        "name": "withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "776:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4050,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "727:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4049,
                          "name": "IIdeaTokenExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "708:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IIdeaTokenExchange_$711_$",
                            "typeString": "type(contract IIdeaTokenExchange)"
                          }
                        },
                        "id": 4051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:28:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdeaTokenExchange_$711",
                          "typeString": "contract IIdeaTokenExchange"
                        }
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizeInterestWithdrawer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "708:56:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 4055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4056,
                  "nodeType": "ExpressionStatement",
                  "src": "708:79:18"
                }
              ]
            },
            "documentation": {
              "id": 4040,
              "nodeType": "StructuredDocumentation",
              "src": "298:310:18",
              "text": " @dev Authorizes an address to withdraw interest for an IdeaToken\n @param exchange The address of the IdeaTokenExchange\n @param ideaToken The address of the IdeaToken for which to authorize an interest withdrawer\n @param withdrawer The address of the withdrawer"
            },
            "functionSelector": "e65add95",
            "id": 4058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4042,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "631:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4044,
                  "mutability": "mutable",
                  "name": "ideaToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "649:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "668:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "630:57:18"
            },
            "returnParameters": {
              "id": 4048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:18"
            },
            "scope": 4059,
            "src": "614:181:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4060,
        "src": "247:551:18"
      }
    ],
    "src": "33:765:18"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/alexa/Desktop/ideamarket-contracts/contracts/spells/AuthorizeInterestWithdrawerSpell.sol",
    "exportedSymbols": {
      "AuthorizeInterestWithdrawerSpell": [
        4059
      ]
    },
    "id": 4060,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4037,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "/C/Users/alexa/Desktop/ideamarket-contracts/contracts/core/IIdeaTokenExchange.sol",
        "file": "../core/IIdeaTokenExchange.sol",
        "id": 4038,
        "nodeType": "ImportDirective",
        "scope": 4060,
        "sourceUnit": 712,
        "src": "60:40:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4039,
          "nodeType": "StructuredDocumentation",
          "src": "104:141:18",
          "text": " @title AuthorizeInterestWithdrawerSpell\n @author Alexander Schlindwein\n @dev Spell to authorize an interest withdrawer"
        },
        "fullyImplemented": true,
        "id": 4059,
        "linearizedBaseContracts": [
          4059
        ],
        "name": "AuthorizeInterestWithdrawerSpell",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4057,
              "nodeType": "Block",
              "src": "697:98:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "ideaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "765:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4054,
                        "name": "withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "776:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4050,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "727:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4049,
                          "name": "IIdeaTokenExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "708:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IIdeaTokenExchange_$711_$",
                            "typeString": "type(contract IIdeaTokenExchange)"
                          }
                        },
                        "id": 4051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:28:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdeaTokenExchange_$711",
                          "typeString": "contract IIdeaTokenExchange"
                        }
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorizeInterestWithdrawer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "708:56:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 4055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:79:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4056,
                  "nodeType": "ExpressionStatement",
                  "src": "708:79:18"
                }
              ]
            },
            "documentation": {
              "id": 4040,
              "nodeType": "StructuredDocumentation",
              "src": "298:310:18",
              "text": " @dev Authorizes an address to withdraw interest for an IdeaToken\n @param exchange The address of the IdeaTokenExchange\n @param ideaToken The address of the IdeaToken for which to authorize an interest withdrawer\n @param withdrawer The address of the withdrawer"
            },
            "functionSelector": "e65add95",
            "id": 4058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4042,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "631:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4044,
                  "mutability": "mutable",
                  "name": "ideaToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "649:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4058,
                  "src": "668:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "630:57:18"
            },
            "returnParameters": {
              "id": 4048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:18"
            },
            "scope": 4059,
            "src": "614:181:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4060,
        "src": "247:551:18"
      }
    ],
    "src": "33:765:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xa25b7A4a818E6EA9382f8166ecBCcA5620BEdE95",
      "transactionHash": "0xb23db3578850171d4830fa84cbf0810b5361a352b2188db3ec570651910dd951"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-10-21T09:55:23.291Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Alexander Schlindwein",
    "details": "Spell to authorize an interest withdrawer",
    "methods": {
      "execute(address,address,address)": {
        "details": "Authorizes an address to withdraw interest for an IdeaToken",
        "params": {
          "exchange": "The address of the IdeaTokenExchange",
          "ideaToken": "The address of the IdeaToken for which to authorize an interest withdrawer",
          "withdrawer": "The address of the withdrawer"
        }
      }
    },
    "title": "AuthorizeInterestWithdrawerSpell"
  },
  "userdoc": {
    "methods": {}
  }
}